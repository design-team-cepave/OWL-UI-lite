// label base
.label {
  font-size: $label-font-size;
  font-weight: normal;
  display: inline;
  line-height: $label-line-height;
  text-align: center;
  text-transform: uppercase;
  text-decoration: none;
  border-radius: $label-border-radius;
  border: $label-border-border;
  position: relative;
  vertical-align: middle;
  color: $label-text-color;
  background: $color-default;
  padding: $label-padding;
  letter-spacing: .01em;
  a, a:hover {
    color: $label-text-color;
    text-decoration: none;
    display: inline-block;
  }
}

// label states
.label {
  &.primary {
    @include label($color-gray-lightest, $color-primary);
  }
  &.error {
    @include label($color-gray-lightest, $color-error);
  }
  &.success {
    @include label($color-gray-lightest, $color-success);
  }
  &.warning {
    @include label($color-gray-darker, $color-warning);
  }
  &.inverted {
    @include label($color-gray-darker, $color-gray-lightest);
  }
  &.outline {
    background: none;
    border: 1px solid rgba($color-primary-dark, .2);
    &, a {
      color: rgba($color-gray-darker, .65);
    }
  }
}

// Badge
.badge {
  padding: $badge-padding;
  border-radius: $ui-line-height-md;
}

// Tags
.label {
  .tag {
    padding: 0;
    background: none;
    font-weight: bold;

    .primary {
      &, a {
        color: $color-primary;
      }
    }
    .error {
      &, a {
        color: $color-error;
      }
    }
    .success {
      &, a {
        color: $color-success;
      }
    }
    .warning {
      &, a {
        color: $color-warning;
      }
    }
    .inverted {
      &, a {
        color: $color-gray-lightest;
      }
    }
  }
}


// Utility
.button:hover {
  .badge {
    opacity: .6;
  }
}

.label {
  h1 & {
    top: rem(-4px);
  }
  h2 & {
    top: rem(-2px);
  }
  h5 & {
    top: rem(-2px);
  }
  h6 & {
    top: rem(-3px);
  }
}
